name: CI

on:
  workflow_dispatch:
    inputs:
      pbm_branch:
        description: "PBM branch"
        required: false
      tests_ver:
        description: "Tests version"
        required: false
      go_ver:
        description: "Golang version"
        required: false
      pr_ver:
        description: "PR version"
        required: false

  pull_request:
    branches:
      - main
      - dev
    paths-ignore:
      - "e2e-tests/**"
      - "packaging/**"
      - "version/**"

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        psmdb: ["5.0", "6.0", "7.0"]
        test: [logical, physical, incremental, external]
    env:
      PBM_BRANCH: ${{ github.event.inputs.pbm_branch || 'main' }}
      GO_VER: ${{ github.event.inputs.go_ver || 'bullseye' }}
      PR_NUMBER: ${{ github.event.number|| github.event.inputs.pr_ver }}

    steps:
      - name: Checkout testing repo
        uses: actions/checkout@v4
        with:
          repository: Percona-QA/psmdb-testing
          ref: ${{ github.event.inputs.tests_ver || 'main'}}
          path: psmdb-testing

      - name: Setup environment with PSMDB ${{ matrix.psmdb }} for PBM PR/branch ${{ github.event.pull_request.title || env.PR_NUMBER || env.PBM_BRANCH }}
        run: |
          PSMDB=percona/percona-server-mongodb:${{ matrix.psmdb }} docker compose build
          docker compose up -d
        working-directory: psmdb-testing/pbm-functional/pytest

      - name: Test ${{ matrix.test }} backup/restore on PSMDB ${{ matrix.psmdb }} for PBM PR/branch ${{ github.event.pull_request.title || env.PR_NUMBER || env.PBM_BRANCH }}
        run: |
          docker compose run test pytest -s --junitxml=junit.xml -k ${{ matrix.test }}
        working-directory: psmdb-testing/pbm-functional/pytest

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          report_paths: "**/junit.xml"
