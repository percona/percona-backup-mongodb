---
version: '3'
services:
  mongo1:
    network_mode: host
    image: percona/percona-server-mongodb:${TEST_PSMDB_VERSION:-latest}
    entrypoint: /entrypoint.sh
    command: --replSet=${TEST_PSMDB_RSNAME:-rs} --port=${TEST_MONGODB_PRIMARY_PORT:-17001}
    volumes:
    - ./test/entrypoint.sh:/entrypoint.sh:ro
    - ./test/ssl/rootCA.crt:/rootCA.crt:ro
    - ./test/ssl/mongodb.pem:/mongod.pem:ro
  mongo2:
    network_mode: host
    image: percona/percona-server-mongodb:${TEST_PSMDB_VERSION:-latest}
    entrypoint: /entrypoint.sh
    command: --replSet=${TEST_PSMDB_RSNAME:-rs} --port=${TEST_MONGODB_SECONDARY1_PORT:-17002}
    volumes:
    - ./test/entrypoint.sh:/entrypoint.sh:ro
    - ./test/ssl/rootCA.crt:/rootCA.crt:ro
    - ./test/ssl/mongodb.pem:/mongod.pem:ro
  mongo3:
    network_mode: host
    image: percona/percona-server-mongodb:${TEST_PSMDB_VERSION:-latest}
    entrypoint: /entrypoint.sh
    command: --replSet=${TEST_PSMDB_RSNAME:-rs} --port=${TEST_MONGODB_SECONDARY2_PORT:-17003}
    volumes:
    - ./test/entrypoint.sh:/entrypoint.sh:ro
    - ./test/ssl/rootCA.crt:/rootCA.crt:ro
    - ./test/ssl/mongodb.pem:/mongod.pem:ro
  init:
    network_mode: host
    image: percona/percona-server-mongodb:${TEST_PSMDB_VERSION:-latest}
    entrypoint: /init-replset.sh
    volumes:
    - ./test/init-replset.sh:/init-replset.sh
    - ./test/ssl/rootCA.crt:/rootCA.crt:ro
    - ./test/ssl/client.pem:/client.pem:ro
    environment:
    - TEST_MONGODB_USERNAME=${TEST_MONGODB_USERNAME:-admin}
    - TEST_MONGODB_PASSWORD=${TEST_MONGODB_PASSWORD:-admin123456}
    - TEST_MONGODB_RS=${TEST_MONGODB_RS:-rs}
    - TEST_MONGODB_PRIMARY_PORT=${TEST_MONGODB_PRIMARY_PORT:-17001}
    - TEST_MONGODB_SECONDARY1_PORT=${TEST_MONGODB_SECONDARY1_PORT:-17002}
    - TEST_MONGODB_SECONDARY2_PORT=${TEST_MONGODB_SECONDARY2_PORT:-17003}
    depends_on:
    - mongo1
    - mongo2
    - mongo3
  test:
    build:
      dockerfile: Dockerfile.test
      context: .
      args:
      - GOLANG_DOCKERHUB_TAG=${GOLANG_DOCKERHUB_TAG:-1.10-stretch}
    network_mode: host
    environment:
    - TEST_MONGODB_URI=127.0.0.1:${TEST_MONGODB_PRIMARY_PORT:-17001}
    - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
    - ./out:/tmp/out
    depends_on:
    - init
    - mongo1
    - mongo2
    - mongo3
